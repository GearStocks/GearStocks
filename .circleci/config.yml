version: 2
jobs:
  build:
    working_directory: ~/application
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - run:
          name: Install packages
          command: 'sudo yarn install'
      #- run:
      #    name: Tests Jest
      #    command: |
      #      mkdir -p tests_results/jest
      #      'echo Hello World'
      #    environment:
      #      JEST_JUNIT_OUTPUT: test_results/jest/junit.xml
      #- run:

  android:
    working_directory: ~/application/android
    docker:
      - image: circleci/android:api-27-node8-alpha
    steps:
      - checkout:
          path: ~/application

      - attach_workspace:
          at: ~/application

      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}

      - run:
          name: lol
          command: cd android/

      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

    #  - run:
    #      name: fastlane tests
    #      command: |
    #        mkdir -p test-results/fastlane
    #        bundle exec fastlane test
    #        mv fastlane/report.xml test-results/fastlane
    #  - store_test_results:
    #      path: test-results

      #- store_artifacts:
    #path: test-results

  test:
    docker:
      - image: circleci/node:4.8.2-jessie
      - image: mongo:3.4.4-jessie
    steps:
      - checkout
      - run:
          name: Test
          command: npm test
      - run:
          name: Generate code coverage
          command: './node_modules/.bin/nyc report --reporter=text-lcov'
      - store_artifacts:
          path: test-results.xml
          prefix: tests
      - store_artifacts:
          path: coverage
          prefix: coverage

workflows:
  version: 2
  build_and_test:
    jobs:
      - android
      - build
      - test:
          requires:
            - build
          filters:
            branches:
              only: master