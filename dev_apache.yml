pr:
  - dev
  include:
    - apache/*
    - certbot/*
    - dev_apache.yml
  
  trigger: none
  
  pool:
    vmImage: 'ubuntu-latest'
  
  #steps:
  #- script: echo Hello, world!
  #  displayName: 'Run a one-line script'
  
  #- script: |
  #    echo Add other tasks to build, test, and deploy your project.
  #    echo See https://aka.ms/yaml
  #  displayName: 'Run a multi-line script'
  
  stages:
    - stage: Build
      displayName: Build stage
      jobs:
      - job: Build
        displayName: 'Prepare Config'
        steps:
        - script: |
            set -e
            echo "API_ADDR=api.gearstocks.store" > .env
            echo "API_PORT=80" >> .env
            sed -i '/- 80:80/d' docker-compose.yml
            echo " -d dev.gearstocks.store; chmod -R 755 /etc/letsencrypt" >> certbot/Dockerfile
            echo Configuration done.
          displayName: 'Configuration Check'
        - script: |
            set -e
            mkdir -p drop/certbot
            cp -R certbot/Dockerfile drop/certbot/
            echo certbot OK
          displayName: Prepare certbot for Archive
        - script: |
            set -e
            mv apache/conf/httpd-ssl-dev.conf apache/conf/httpd-ssl.conf
            cp -R apache drop/
            echo apache OK
        displayName: Prepare apache for Archive
        - script: echo Archive OK
          displayName: Archive Files
        - task: ArchiveFiles@2
          displayName: 'Archive apache and certbot files'
          inputs:
            rootFolderOrFile: '$(System.DefaultWorkingDirectory)/drop'
            includeRootFolder: false
            archiveType: zip
            archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            replaceExistingArchive: true
        - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
          artifact: drop
    - stage: Deploy
      displayName: Deploy
      dependsOn: Build
      condition: succeeded()
      jobs:
        - deployment: GearStock
          displayName: 'Deploy Apache Dev'
          environment:
            name: 'Gearstocks'
            resourceType: VirtualMachine
          strategy:
            runOnce:
              deploy:
                steps:
                - script: |
                    set -e
                    unzip -o $(Build.ArtifactStagingDirectory)/../drop/$(Build.BuildId).zip -d /home/GearStocks/
                    cd /home/GearStocks/
                    mkdir -p images
                    docker-compose stop apache
                    docker-compose rm --force apache
                    docker-compose up -d --build apache